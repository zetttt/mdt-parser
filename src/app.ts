import { toString } from './MdtEncoder.js';
import { fromString } from './MdtDecoder.js';

// 1. 先解析真实MDT路线数据
const sourceString = '!nsvxVTjmu0FqtdXfJ5JhxuLM6wfnB0x2lwneUoZBUWeX0L9s)TpdyBO400Oi5a2N75EUN7fZa2dSY2QFH7vh1pwabHd70W2WkRTBusZscIyfrdp)rioliNvq0VmEArSEzdRGoC6gzBBTS)OIn8BmcF6IOPbulDXPqqYvsh5S0bWc6Orqa56OtPjrW5I99s1)mX)xe)nRiC4XN3j7XH0TVVRdBu303CaBBUT(KMzymZhrP24eTnAykhWT9sPrAkeFs0CWWyNGRUNZpIJEToG)OrUW2x(30sKBHyxCU65G58O5dh0vRSTJvY5eKZxrGfk1XtIlDX(PJ4NetEJFZ8oK1CCvywO5(rBiK6T1YcHGRcZcn1viz(Yp2N61An34rwm0l4N8QjzKmHjzb0mNmmvy6sze6ofMTBWyUzVZuqYemi0Zgx64tkZMv)PIxjiyU9dgpAzXaZkaGz9g61vMAZz(2bH63mYotDq812S0i2kp6IZAt9VCFrer9z3Ux2LDJxjYO52x06rICZiHlGWvJXgEn0cxOsSFT6aL8MG3b2gUZBIVI7bCJfPV)hVZ3Vv2xjXNrPdQcpPx)(orn2fC79V8427Ey7lp(biJv(uTy4ouEhI)Svw)LwrdwZQM3XCtzfEOxihVR0WAVOMv(TYnj39PFC60x)SEp2)b';

// !nsvxVTjmu0FqtdXfJ5JhxuLM6wfnB0x2lwneUoZBUWeX0L9s)TpdyBO400Oi5a2N75EUN7fZa2dSY2QFH7vh1pwabHd70W2WkRTBusZscIyfrdp)rioliNvq0VmEArSEzdRGoC6gzBBTS)OIn8BmcF6IOPbulDXPqqYvsh5S0bWc6Orqa56OtPjrW5I99s1)mX)xe)nRiC4XN3j7XH0TVVRdBu303CaBBUT(KMzymZhrP24eTnAykhWT9sPrAkeFs0CWWyNGRUNZpIJEToG)OrUW2x(30sKBHyxCU65G58O5dh0vRSTJvY5eKZxrGfk1XtIlDX(PJ4NetEJFZ8oK1CCvywO5(rBiK6T1YcHGRcZcn1viz(Yp2N61An34rwm0l4N8QjzKmHjzb0mNmmvy6sze6ofMTBWyUzVZuqYemi0Zgx64tkZMv)PIxjiyU9dgpAzXaZkaGz9g61vMAZz(2bH63mYotDq812S0i2kp6IZAt9VCFrer9z3Ux2LDJxjYO52x06rICZiHlGWvJXgEn0cxOsSFT6aL8MG3b2gUZBIVI7bCJfPV)hVZ3Vv2xjXNrPdQcpPx)(orn2fC79V8427Ey7lp(biJv(uTy4ouEhI)Svw)LwrdwZQM3XCtzfEOxihVR0WAVOMv(TYnj39PFC60x)SEp2)b

// !nAvYUTnmq0VOwiUPL7fOOTaobv9upqaBlsx2WifOLuL)(kksnJwOdYfAjYHV5nVzXssK)sw2C5VQR9Dtp2llRmAT56GT)n5jsYNtKL)tPEsEA(XxpBhuURCDOTvv3)LH6BQM6VvnozmH5mPtzNaZ0u7Hly4Jdw7Kjod6vQNn13ci2A09pO1DQf))YKLUhNnE7pNyc3kfwyZlPUv(8JzUvbCuk8AgytoCqHBH4aQ3J3IBsbhKbqL7nJFxZCXAJTPvwQ1mLwVd0LlrZXqarNIXaLdKMkq3Wa6qloY459cAscQmuuzi(lXIYFH)WSvhs2esUaQqTdaW5ycHIoNsostF(XtZ8TjWDClIC7LakQrm0JZVtccd5(XHl1Wu7qgyhpCFYH7pZhGi7Q)wmZZcm9HzVui5LfCrYrxuSBl0pRZdfHslrW61CLFKRmSCJHLBSIi0GdwoV9ogX2EAiQduNSojl2P46lEfpncJfrymYdglAtUiMgIjfsm9KEOC2tQqPYAcWtaO4yOZXEjolcbYJOeV3acF3uEenjnsfh23qX(g)4bo2)lWrjPWOGTrTV4zrAYpwfskENMNIqQeICw0A2L(O0DzA)PPBlN4WD3n3EbfEuuirqHVbLydKbHM)bg37Xdv2L2cI4dmNekey3DYrSXsG5RVgM9ZJOS0vqJtLMZJbXnhLUeiGjW8ipCXAzbzk5WuMfJRsiAQZy8)6lhUyvVQSG40RgNwp3E(tp5w6gQTV1jlFUY4(ucDRs9NgB13Bm1Qk5fCNWhmCrDBWyN)KHaGdMQjT(fZpnJ)EC8hFDAp5)b

// !9n1YUTnmqWpOIk4Lupp2GcueKah3YCPxiIT1shLWivitL6EjF7LAxkzAa5aiqiXDMzNDePg0pQvD7Eb37oo(kWlQSY8eHw5F(kKwMuPvs9A)(P6BmBThrTQD6n3imMLiRijJzLwaj5FolzGfaZSYeqI8tz55v3ymn7hSU)Px7j9xeFvVELw9(w7aoQ5(H(ES199H2dyx7T1N8YbEbpIw)C2016b5MHTzWAP(5q8TM2dKw9ng3dgZrKIfp4)4rfNq0YilbzcVJLrjXCHZJPFRXE2z761kJrIgtebgcLcR5ylnwozSqKQPlO6OMvXrldPkgprol(JiljXiOmKcYsLXMjnwIl7FvyQ4QlHXym742KpwnpaPKAd50IP2SI2dcNIOiOCHCpFSaSkEyJYdUxfX9ceSWal8Q4Mc8VaGMr4A)64qMmJyEaCN7Gmlwtws5L(KghqCL)ICkwf7AXfAYFvUORNAHGdqXLUVke)byZGzfOkWIUA6eBOC(cG2ctbEyYw6u65Z(H8T4kHqv4(E4EQAyNfFhTbGo8KF9xBBQX(KBF4JN2C)JB(4PVa(JsVv3mQPPhXN7S105LD4HHglD)M4p0uRv)uDt(9F73NoD3p0U)d

console.log('1. 解析原始字符串:');
const decodedData = fromString(sourceString);
console.log('解析结果:', JSON.stringify(decodedData, null, 2));

// 2. 将解析出的数据重新编码
console.log('\n2. 重新编码解析后的数据:');
const reEncodedString = await toString(decodedData);
console.log('Re-encoded string length:', reEncodedString.length);
console.log('Original string length:', sourceString.length);
console.log('编码结果:', reEncodedString);

// 3. 对比原始字符串和重新编码的字符串是否一致
console.log('\n3. 验证结果:');
console.log('编码结果与原始字符串是否相同:', sourceString === reEncodedString);

// 4. 如果不同,再次解析重编码的字符串进行对比
if(sourceString !== reEncodedString) {
  console.log('\n4. 解析重编码的字符串:');
  const reDecodedData = fromString(reEncodedString);
  console.log('数据结构是否相同:', JSON.stringify(decodedData) === JSON.stringify(reDecodedData));
}